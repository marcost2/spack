diff --git a/Makefile b/Makefile
index 279705db..60bf914b 100644
--- a/Makefile
+++ b/Makefile
@@ -10,6 +10,11 @@ CHEM_FILES =	../chem/module_aerosols_sorgam.o \
 		../chem/module_input_tracer.o \
 		../chem/module_aerosols_soa_vbs.o
 CHEM_FILES2 =	../chem/module_data_mosaic_asect.o
+ELEC_FILES = ../elec/module_commasmpi.o \
+             ../elec/module_mp_boxmgsetup.o \
+             ../elec/module_mp_screen.o \
+             ../elec/module_mp_discharge.o \
+             ../elec/include_microphysics_driver_elec.F
 
 deflt :
 		@ echo Please compile the code using ./compile
@@ -94,6 +99,7 @@ framework_only : configcheck
 wrf : framework_only
 	$(MAKE) MODULE_DIRS="$(ALL_MODULES)" physics
 	if [ $(WRF_CHEM) -eq 1 ]    ; then $(MAKE) MODULE_DIRS="$(ALL_MODULES)" chemics ; fi
+	if [ $(WRF_ELEC) -eq 1 ]    ; then $(MAKE) MODULE_DIRS="$(ALL_MODULES)" elecphys ; fi
 	if [ $(WRF_EM_CORE) -eq 1 ]    ; then $(MAKE) MODULE_DIRS="$(ALL_MODULES)" em_core ; fi
 	if [ $(WRF_NMM_CORE) -eq 1 ]   ; then $(MAKE) MODULE_DIRS="$(ALL_MODULES)" nmm_core ; fi
 	if [ $(WRF_EXP_CORE) -eq 1 ]   ; then $(MAKE) MODULE_DIRS="$(ALL_MODULES)" exp_core ; fi
@@ -918,12 +924,24 @@ chemics :
 #	( cd chem ; $(MAKE) )
 #	( cd chem ; $(MAKE) $(J) )
 
+elecphys :
+	@ echo '--------------------------------------'
+	( cd elec ; $(MAKE) )
+
 physics :
 	@ echo '--------------------------------------'
 	if [ $(WRF_CHEM) -eq 0 ] ; then \
-		( cd phys ; $(MAKE) CF2=" " ) ; \
+		if [ $(WRF_ELEC) -eq 0 ] ; then \
+			( cd phys ; $(MAKE) CF2=" " EF=" " ) ; \
+		else \
+			( cd phys ; $(MAKE) EF="$(ELEC_FILES)" ) ; \
+		fi \
 	else \
-		( cd phys ; $(MAKE) CF2="$(CHEM_FILES2)" ) ; \
+		if [ $(WRF_ELEC) -eq 0 ] ; then \
+			( cd phys ; $(MAKE) CF2="$(CHEM_FILES2)" EF=" ") ; \
+		else \
+			( cd phys ; $(MAKE) CF2="$(CHEM_FILES2)"  EF="$(ELEC_FILES)" ) ; \
+		fi \
 	fi
 
 em_core :
diff --git a/arch/Config_new.pl b/arch/Config_new.pl
index e614f7ef..c4149b1a 100644
--- a/arch/Config_new.pl
+++ b/arch/Config_new.pl
@@ -13,6 +13,7 @@ $sw_tirpc_libdir = "";
 $sw_netcdf_path = "" ;
 $sw_netcdff_path = "" ;
 $sw_pnetcdf_path = "" ;
+$sw_boxmg_path = "" ;
 $sw_hdf5_path=""; 
 $sw_phdf5_path=""; 
 $sw_jasperlib_path=""; 
@@ -32,6 +33,7 @@ $sw_4dvar_flag = "" ;
 $sw_wrfplus_path = "" ;
 $sw_wavelet_flag = "" ;
 $WRFCHEM = 0 ;
+$WRFELEC = 0 ;
 $sw_os = "ARCH" ;           # ARCH will match any
 $sw_mach = "ARCH" ;         # ARCH will match any
 $sw_wrf_core = "" ;
@@ -112,6 +114,10 @@ while ( substr( $ARGV[0], 0, 1 ) eq "-" )
   {
     $sw_pnetcdf_path = substr( $ARGV[0], 9 ) ;
   }
+  if ( substr( $ARGV[0], 1, 6 ) eq "boxmg=" )
+  {
+    $sw_boxmg_path = substr( $ARGV[0], 7 ) ;
+  }
   if ( substr( $ARGV[0], 1, 5 ) eq "hdf5=" )
   {
     $sw_hdf5_path = substr( $ARGV[0], 6 ) ;
@@ -204,6 +210,23 @@ while ( substr( $ARGV[0], 0, 1 ) eq "-" )
       $sw_coamps_core = "-DCOAMPS_CORE=1" ;
     }
   }
+
+  if ( substr( $ARGV[0], 1, 13 ) eq "compileflags=" )
+    {
+      $sw_compileflags = substr( $ARGV[0], 15 ) ;
+
+      $sw_compileflags =~ s/!/ /g ;
+#     look for each known option
+      $where_index = index ( $sw_compileflags , "-DWRF_ELEC" ) ;  
+      if ( $where_index eq -1 ) 
+      {
+        $WRFELEC = 0 ;
+      }
+      else
+      {
+        $WRFELEC = 1 ;
+      } 
+  }
   if ( substr( $ARGV[0], 1, 13 ) eq "compileflags=" )
   {
     $sw_compileflags = substr( $ARGV[0], 14 ) ;
@@ -349,8 +372,11 @@ while ( substr( $ARGV[0], 0, 1 ) eq "-" )
 
 $validresponse = 0 ;
 
+
 if ( $sw_wrf_core eq "4D_DA_CORE" ) 
    { @platforms = qw ( serial dmpar ) ; }
+   elsif ( $WRFELEC == 1 )
+   { @platforms = qw ( dmpar ) ; }
    else
    { @platforms = qw ( serial smpar dmpar dm+sm ) ; }
 
@@ -467,6 +493,7 @@ while ( <CONFIGURE_DEFAULTS> )
     $_ =~ s/CONFIGURE_NETCDF_PATH/$sw_netcdf_path/g ;
     $_ =~ s/CONFIGURE_NETCDFF_PATH/$sw_netcdff_path/g ;
     $_ =~ s/CONFIGURE_PNETCDF_PATH/$sw_pnetcdf_path/g ;
+    $_ =~ s/CONFIGURE_BOXMG_PATH/$sw_boxmg_path/g ;
     $_ =~ s/CONFIGURE_HDF5_PATH/$sw_hdf5_path/g ;
     $_ =~ s/CONFIGURE_PHDF5_PATH/$sw_phdf5_path/g ;
     $_ =~ s/CONFIGURE_LDFLAGS/$sw_ldflags/g ;
@@ -556,7 +583,17 @@ while ( <CONFIGURE_DEFAULTS> )
 	$_ =~ s:CONFIGURE_PHDF5_FLAG::g ;
 	$_ =~ s:CONFIGURE_PHDF5_LIB_PATH::g ;
 	 }
-
+  #   printf "check setting CONFIGURE_BOXMG_LIB_PATH sw_boxmg_path=$sw_boxmg_path\n";
+    if ( $sw_boxmg_path ) 
+      {     #  printf "set CONFIGURE_BOXMG_LIB_PATH sw_boxmg_path\n";
+        $_ =~ s:CONFIGURE_BOXMG_LIB_PATH:-L$ENV{BOXMGLIBDIR}/lib -lboxmg_opt_sgl -lboxmg-extras_opt_sgl: ;
+        $_ =~ s:BOXMGINCPATH:-I$ENV{BOXMGLIBDIR}/include -I$ENV{BOXMGLIBDIR}/extras/msg/include: ;
+      	 }
+    else                   
+      {  #  printf "not setting CONFIGURE_BOXMG_LIB_PATH sw_boxmg_path=$sw_boxmg_path\n";
+        $_ =~ s:CONFIGURE_BOXMG_LIB_PATH::g ;
+        $_ =~ s:BOXMGINCPATH::g ;
+      	 }
     if ( $sw_jasperlib_path && $sw_jasperinc_path ) 
       { $_ =~ s/CONFIGURE_WRFIO_GRIB2/wrfio_grib2/g ;
         $_ =~ s:CONFIGURE_GRIB2_FLAG:-DGRIB2:g ;
@@ -636,7 +673,7 @@ while ( <CONFIGURE_DEFAULTS> )
     if ( ! (substr( $_, 0, 5 ) eq "#ARCH") ) { @machopts = ( @machopts, $_ ) ; }
     if ( substr( $_, 0, 10 ) eq "ENVCOMPDEF" )
     {
-      @machopts = ( @machopts, "WRF_CHEM\t=\t$WRFCHEM \n" ) ;
+      @machopts = ( @machopts, "WRF_CHEM\t=\t$WRFCHEM\nWRF_ELEC\t=\t$WRFELEC \n" )
     }
   }
 
@@ -669,8 +706,9 @@ while ( <CONFIGURE_DEFAULTS> )
         $sw_ompparallel = "" ;
         $sw_dmparallel = "" ;
         $validresponse = 0 ;
-        #only allow parallel netcdf if the user has chosen parallel option
+	#only allow parallel netcdf or boxmg if the user has chosen parallel option
         if ( $paropt ne 'dmpar' && $paropt ne 'dm+sm' ) { $sw_pnetcdf_path = "" ; }
+        if ( $paropt ne 'dmpar' && $paropt ne 'dm+sm' ) { $sw_boxmg_path = "" ; }
         #
         until ( $validresponse ) {
           if ( $ENV{WRF_DA_CORE} eq "1" || $sw_da_core eq "-DDA_CORE=1" ) {
diff --git a/arch/postamble_new b/arch/postamble_new
index d746df4b..914f5a64 100644
--- a/arch/postamble_new
+++ b/arch/postamble_new
@@ -36,7 +36,7 @@ ESMF_LIB_FLAGS  =    ESMFLIBFLAG
 #NOWIN ESMF_IO_LIB     =    ESMFIOLIB
 ESMF_IO_LIB_EXT =    ESMFIOEXTLIB
 INCLUDE_MODULES =    $(MODULE_SRCH_FLAG) \
-                     $(ESMF_MOD_INC) $(ESMF_LIB_FLAGS) \
+                     $(ESMF_MOD_INC) $(ESMF_LIB_FLAGS) BOXMGINCPATH \
                       -I$(WRF_SRC_ROOT_DIR)/main \
                       -I$(WRF_SRC_ROOT_DIR)/external/io_netcdf \
                       -I$(WRF_SRC_ROOT_DIR)/external/io_int \
@@ -61,18 +61,19 @@ CC_TOOLS_CFLAGS = CONFIGURE_NMM_CORE
 #NOWIN                      $(WRF_SRC_ROOT_DIR)/frame/pack_utils.o 
 
 #NOWIN LIB_EXTERNAL    = \
-#NOWIN                      CONFIGURE_NETCDF_LIB_PATH CONFIGURE_PNETCDF_LIB_PATH CONFIGURE_GRIB2_LIB CONFIGURE_ATMOCN_LIB CONFIGURE_HDF5_LIB_PATH
+#NOWIN                      CONFIGURE_NETCDF_LIB_PATH CONFIGURE_PNETCDF_LIB_PATH CONFIGURE_BOXMG_LIB_PATH CONFIGURE_GRIB2_LIB CONFIGURE_ATMOCN_LIB CONFIGURE_HDF5_LIB_PATH
 
 LIB             =    $(LIB_BUNDLED) $(LIB_EXTERNAL) $(LIB_LOCAL) $(LIB_WRF_HYDRO) $(LIB_TIRPC)
 LDFLAGS         =    $(OMP) $(FCFLAGS) $(LDFLAGS_LOCAL) CONFIGURE_LDFLAGS
 ENVCOMPDEFS     =    CONFIGURE_COMPILEFLAGS
-CPPFLAGS        =    $(ARCHFLAGS) $(ENVCOMPDEFS) -I$(LIBINCLUDE) $(TRADFLAG) CONFIGURE_COMMS_INCLUDE
+CPPFLAGS        =    $(ARCHFLAGS) $(ENVCOMPDEFS) -I$(LIBINCLUDE) $(TRADFLAG) CONFIGURE_COMMS_INCLUDE BOXMGINCPATH
 NETCDFPATH      =    CONFIGURE_NETCDF_PATH
 NETCDFFPATH     =    CONFIGURE_NETCDFF_PATH
 HDF5PATH        =    CONFIGURE_HDF5_PATH
 WRFPLUSPATH     =    CONFIGURE_WRFPLUS_PATH
 RTTOVPATH       =    CONFIGURE_RTTOV_PATH
 PNETCDFPATH     =    CONFIGURE_PNETCDF_PATH
+BOXMGPATH       =    CONFIGURE_BOXMG_PATH
 TIRPCINC        =    CONFIGURE_TIRPC_INC
 LIB_TIRPC       =    CONFIGURE_TIRPC_LIB
 
diff --git a/arch/preamble_new b/arch/preamble_new
index 3a252799..47a32683 100644
--- a/arch/preamble_new
+++ b/arch/preamble_new
@@ -96,6 +96,7 @@ GPFS            =
 CURL            =
 HDF5            =
 ZLIB            =
+BOXMG           =
 DEP_LIB_PATH    = CONFIGURE_DEP_LIB_PATH
 NETCDF4_DEP_LIB = $(DEP_LIB_PATH) $(HDF5) $(ZLIB) $(GPFS) $(CURL)
 
diff --git a/clean b/clean
index 600d200f..27cb5240 100755
--- a/clean
+++ b/clean
@@ -3,7 +3,7 @@
 set nonomatch
 
 
-foreach dir ( frame chem share dyn_em dyn_exp dyn_nmm phys main tools )
+foreach dir ( frame chem elec share dyn_em dyn_exp dyn_nmm phys main tools )
   if ( -d $dir ) then
     ( cd $dir ; echo $dir ; /bin/rm -f core wrf *.f90 *.exe *.kmo *.mod *.o *.obj *.inc *.F90 *.a \
                       db_* Warnings module_state_description.F module_dm.F gmeta \
diff --git a/compile b/compile
index f701610d..4514a50c 100755
--- a/compile
+++ b/compile
@@ -132,6 +132,7 @@ else
   if ( ! $?WRF_COAMPS_CORE ) setenv WRF_COAMPS_CORE 0
   if ( ! $?WRF_EXP_CORE )    setenv WRF_EXP_CORE 0
   if ( ! $?WRF_CHEM )        setenv WRF_CHEM 0
+  if ( ! $?WRF_ELEC )        setenv WRF_ELEC 0
   if ( ! $?WRF_DFI_RADAR )   setenv WRF_DFI_RADAR 0
   if ( ! $?HWRF )            setenv HWRF 0
   if ( ! $?WRF_CONVERT ) then
@@ -169,6 +170,14 @@ else
     exit
   endif
 
+  if ( ( $WRF_ELEC == 1 )  && ( ! -d elec ) ) then
+    echo "  "
+    echo "You need to download and untar the elec code, or"
+    echo "unset the WRF_ELEC env variable."
+    echo "  "
+    exit
+  endif
+
   set overwrite=0
   if ($WRF_NMM_CORE == 1 && $WRF_DFI_RADAR == 1 ) then
     echo "radar dfi not yet supported in NMM core, set WRF_DFI_RADAR to 0 "
diff --git a/configure b/configure
index f9040a60..1e6a1d89 100755
--- a/configure
+++ b/configure
@@ -29,6 +29,7 @@ while [ $# -ge 1 ]; do
       -time) shift ; FORTRAN_COMPILER_TIMER=$1 ;;
       -vn)  vnest="VN" ;;
       chem) WRF_CHEM=1  ;;
+      elec) WRF_ELEC=1  ;;
       kpp) WRF_KPP=1  ;;
       radardfi) WRF_DFI_RADAR=1  ;;
       wrfda) wrf_core=DA_CORE ;;
@@ -599,10 +600,10 @@ if [ -n "$WRF_CHEM" ] ; then
       fi
     fi 
   else
-    compileflags="${compileflags} "
+    compileflags="${compileflags}"
   fi
 else
-  compileflags="${compileflags} "
+  compileflags="${compileflags}"
 fi
 
 if [ -n "$WRF_NMM_CORE" -a -n "$WRF_CHEM" ]; then
@@ -615,6 +616,27 @@ if [ -n "$WRF_NMM_CORE" -a -n "$WRF_CHEM" ]; then
   fi
 fi
 
+if [ -n "$WRF_ELEC" ] ; then
+  if [ $WRF_ELEC = 1 ] ; then
+    echo Building WRF with electrification option
+    compileflags="${compileflags}!-DWRF_ELEC"
+    echo ${compileflags}
+   if [ -n "$BOXMGLIBDIR" ] ; then
+    echo "Will use BoxMG in dir: $BOXMGLIBDIR"
+   else
+    echo "WRF_ELEC requires the BoxMG libraries"
+    echo "BOXMGLIBDIR environment flag must be set with path to the BoxMG directory"
+    echo
+    exit 21
+   fi
+  else
+    compileflags="${compileflags}"
+  fi
+else
+ compileflags="${compileflags}"
+fi
+
+
 type m4 > /dev/null
 if [ $? -ne 0 ] ; then
   echo
@@ -653,13 +675,15 @@ else
 fi
 echo "TIRPC_LIB=${TIRPC_LIB}"
 
+echo compileflags=${compileflags}
+
 # Found perl, so proceed with configuration
 if test -n "$PERL" ; then
    srch=`grep -i "^#ARCH.*$os" arch/configure_new.defaults | grep -i "$mach"`
    if [ -n "$srch" ] ; then
      $PERL arch/Config_new.pl -dmparallel=$COMMLIB -ompparallel=$OMP -perl=$PERL \
         -tirpc_inc=$TIRPC_INC -tirpc_lib=$TIRPC_LIB -netcdf=$NETCDF -netcdff=$NETCDFF \
-        -pnetcdf=$PNETCDF -hdf5=$HDF5 -phdf5=$PHDF5 -os=$os -mach=$mach -ldflags=$ldflags \
+        -pnetcdf=$PNETCDF -hdf5=$HDF5 -phdf5=$PHDF5 -boxmg=$BOXMGLIBDIR -os=$os -mach=$mach -ldflags=$ldflags \
         -compileflags=$compileflags -opt_level=$opt_level -USENETCDFF=$USENETCDFF \
         -USENETCDF=$USENETCDF -time=$FORTRAN_COMPILER_TIMER -tfl="$TFL" -cfl="$CFL" \
         -config_line="$config_line" -wrf_core=$wrf_core -gpfs=$GPFS_PATH -curl=$CURL_PATH \
